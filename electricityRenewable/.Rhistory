date: "29 de Agosto de 1017"
output:
slidy_presentation:
fig.align: center
fig_caption: yes
fig_height: 6
fig_width: 10
footer: Por Aurelio Gallardo
highlight: pygments
ioslides_presentation: default
subtitle: Pag 57. Everest. TINII.
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Ejercicio 1. Densidad del aluminio.
<p style="text-align:justify;">
El aluminio tiene una masa atómica de 26.97 g/mol. Sabiendo que cristaliza en el sistema FCC y que la dimensión de la celda unidad es de a=4.049 Å ¿cuál es su densidad?
</p>
<hr>
```{r datos0, echo=FALSE, warning=FALSE}
library("units")
nat=4 ## número de átomos
mat=set_units(26.97,g/mol) ## masa atómica
NA=set_units(6.022e23,1/mol) ## Número de avogadro
a=set_units(4.094,Å) ## tamaño celda en angstrong
## Volumen de celda
Vcelda = 16*sqrt(2)*a^3
## Masa de celda
mcelda=nat*mat/Na
## densidad
d=mcelda / Vcelda
d
## Cambio de unidades a días
## units(t2)=with(ud_units,d)
```
<p style="text-align:justify;">
</p>
<p style="text-align:justify;">
</p>
<p style="text-align:justify;">
</p>
---
title: "Ejercicio 1. Densidad del Aluminio"
author: "Aurelio Gallardo Rodríguez"
date: "29 de Agosto de 1017"
output:
slidy_presentation:
fig.align: center
fig_caption: yes
fig_height: 6
fig_width: 10
footer: Por Aurelio Gallardo
highlight: pygments
ioslides_presentation: default
subtitle: Pag 57. Everest. TINII.
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Ejercicio 1. Densidad del aluminio.
<p style="text-align:justify;">
El aluminio tiene una masa atómica de 26.97 g/mol. Sabiendo que cristaliza en el sistema FCC y que la dimensión de la celda unidad es de a=4.049 Å ¿cuál es su densidad?
</p>
<hr>
```{r datos0, echo=FALSE, warning=FALSE}
library("units")
nat=4 ## número de átomos
mat=set_units(26.97,g/mol) ## masa atómica
NA=set_units(6.022e23,1/mol) ## Número de avogadro
a=set_units(4.094,Å) ## tamaño celda en angstrong
## Volumen de celda
Vcelda = 16*sqrt(2)*a^3
## Masa de celda
mcelda=nat*mat/NA
## densidad
d=mcelda / Vcelda
d
## Cambio de unidades a días
## units(t2)=with(ud_units,d)
```
<p style="text-align:justify;">
</p>
<p style="text-align:justify;">
</p>
<p style="text-align:justify;">
</p>
sqrt(2)
---
title: "Ejercicio 1. Densidad del Aluminio"
author: "Aurelio Gallardo Rodríguez"
date: "29 de Agosto de 1017"
output:
slidy_presentation:
fig.align: center
fig_caption: yes
fig_height: 6
fig_width: 10
footer: Por Aurelio Gallardo
highlight: pygments
ioslides_presentation: default
subtitle: Pag 57. Everest. TINII.
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Ejercicio 1. Densidad del aluminio.
<p style="text-align:justify;">
El aluminio tiene una masa atómica de 26.97 g/mol. Sabiendo que cristaliza en el sistema FCC y que la dimensión de la celda unidad es de a=4.049 Å ¿cuál es su densidad?
</p>
<hr>
```{r datos0, echo=FALSE, warning=FALSE}
library("units")
nat=4 ## número de átomos
mat=set_units(26.97,g/mol) ## masa atómica
NA=set_units(6.022e23,1/mol) ## Número de avogadro
a=set_units(4.094,Å) ## tamaño celda en angstrong
a
## Volumen de celda
## Vcelda = 16*sqrt(2)*a^3
## Masa de celda
## mcelda=nat*mat/NA
## densidad
## d=mcelda / Vcelda
## d
## Cambio de unidades a días
## units(t2)=with(ud_units,d)
```
<p style="text-align:justify;">
</p>
<p style="text-align:justify;">
</p>
<p style="text-align:justify;">
</p>
---
title: "Ejercicio 1. Densidad del Aluminio"
author: "Aurelio Gallardo Rodríguez"
date: "29 de Agosto de 1017"
output:
slidy_presentation:
fig.align: center
fig_caption: yes
fig_height: 6
fig_width: 10
footer: Por Aurelio Gallardo
highlight: pygments
ioslides_presentation: default
subtitle: Pag 57. Everest. TINII.
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Ejercicio 1. Densidad del aluminio.
<p style="text-align:justify;">
El aluminio tiene una masa atómica de 26.97 g/mol. Sabiendo que cristaliza en el sistema FCC y que la dimensión de la celda unidad es de a=4.049 Å ¿cuál es su densidad?
</p>
<hr>
```{r datos0, echo=FALSE, warning=FALSE}
library("units")
nat=4 ## número de átomos
mat=set_units(26.97,g/mol) ## masa atómica
NumA=set_units(6.022e23,1/mol) ## Número de avogadro
a=set_units(4.094,Å) ## tamaño celda en angstrong
a
## Volumen de celda
## Vcelda = 16*sqrt(2)*a^3
## Masa de celda
## mcelda=nat*mat/NA
## densidad
## d=mcelda / Vcelda
## d
## Cambio de unidades a días
## units(t2)=with(ud_units,d)
```
<p style="text-align:justify;">
</p>
<p style="text-align:justify;">
</p>
<p style="text-align:justify;">
</p>
---
title: "Ejercicio 1. Densidad del Aluminio"
author: "Aurelio Gallardo Rodríguez"
date: "29 de Agosto de 1017"
output:
slidy_presentation:
fig.align: center
fig_caption: yes
fig_height: 6
fig_width: 10
footer: Por Aurelio Gallardo
highlight: pygments
ioslides_presentation: default
subtitle: Pag 57. Everest. TINII.
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Ejercicio 1. Densidad del aluminio.
<p style="text-align:justify;">
El aluminio tiene una masa atómica de 26.97 g/mol. Sabiendo que cristaliza en el sistema FCC y que la dimensión de la celda unidad es de a=4.049 Å ¿cuál es su densidad?
</p>
<hr>
```{r datos0, echo=FALSE, warning=FALSE}
library("units")
nat=4 ## número de átomos
mat=set_units(26.97,g/mol) ## masa atómica
NumA=set_units(6.022e23,1/mol) ## Número de avogadro
a=set_units(4.094,Å) ## tamaño celda en angstrong
a
## Volumen de celda
## Vcelda = 16*sqrt(2)*a^3
## Masa de celda
## mcelda=nat*mat/NA
## densidad
## d=mcelda / Vcelda
## d
## Cambio de unidades a días
## units(t2)=with(ud_units,d)
```
<p style="text-align:justify;">
ghgfh
</p>
<p style="text-align:justify;">
gfgh
</p>
<p style="text-align:justify;">
gfhfgh
</p>
---
title: "Ejercicio 1. Densidad del Aluminio"
author: "Aurelio Gallardo Rodríguez"
date: "29 de Agosto de 1017"
output:
slidy_presentation:
fig.align: center
fig_caption: yes
fig_height: 6
fig_width: 10
footer: Por Aurelio Gallardo
highlight: pygments
ioslides_presentation: default
subtitle: Pag 57. Everest. TINII.
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Ejercicio 1. Densidad del aluminio.
<p style="text-align:justify;">
El aluminio tiene una masa atómica de 26.97 g/mol. Sabiendo que cristaliza en el sistema FCC y que la dimensión de la celda unidad es de a=4.049 Å ¿cuál es su densidad?
</p>
<hr>
```{r datos0, echo=FALSE, warning=FALSE}
library("units")
nat=4 ## número de átomos
mat=set_units(26.97,g/mol) ## masa atómica
NumA=set_units(6.022e23,1/mol) ## Número de avogadro
a=set_units(4.094,Å) ## tamaño celda en angstrong
a
## Volumen de celda
## Vcelda = 16*sqrt(2)*a^3
## Masa de celda
## mcelda=nat*mat/NA
## densidad
## d=mcelda / Vcelda
## d
## Cambio de unidades a días
## units(t2)=with(ud_units,d)
```
---
title: "Ejercicio 1. Densidad del Aluminio"
author: "Aurelio Gallardo Rodríguez"
date: "29 de Agosto de 1017"
output:
slidy_presentation:
fig.align: center
fig_caption: yes
fig_height: 6
fig_width: 10
footer: Por Aurelio Gallardo
highlight: pygments
ioslides_presentation: default
subtitle: Pag 57. Everest. TINII.
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```
## Ejercicio 1. Densidad del aluminio.
<p style="text-align:justify;">
El aluminio tiene una masa atómica de 26.97 g/mol. Sabiendo que cristaliza en el sistema FCC y que la dimensión de la celda unidad es de a=4.049 Å ¿cuál es su densidad?
</p>
<hr>
```{r datos0, echo=FALSE, warning=FALSE}
library("units")
nat=4 ## número de átomos
mat=set_units(26.97,g/mol) ## masa atómica
NumA=set_units(6.022e23,1/mol) ## Número de avogadro
a=set_units(4.094,Å) ## tamaño celda en angstrong
a
## Volumen de celda
## Vcelda = 16*sqrt(2)*a^3
## Masa de celda
## mcelda=nat*mat/NA
## densidad
## d=mcelda / Vcelda
## d
## Cambio de unidades a días
## units(t2)=with(ud_units,d)
```
install.packages("dplyr")
install.packages("tidyr")
# Intenta conseguir el nombre del país según el código
datos$Codigos=factor(datos$Codigos) # los códigos de los países en datos
codigos=datos$Codigos
listadoPaises <- read.csv("paises.csv")
# nombre de paises
library(dplyr)
# Utilizar %in% con filter para filtrar los datos
# Creo un data frame, a partir del listado de países, con
# dos columnas, una con el nombre del país, y otra con el código
nombrePaises=filter(listadoPaises,Código%in%codigos)[,c("nombre","Código")]
# Ordenando este vector por código
nombrePaises=nombrePaises[order(nombrePaises$Código),]
nombrePaises
# Crear datos2 como filtrado con los Códigos de países
datos2=filter(datos,Codigos%in%listadoPaises$Código)
datos2$nombrePais=nombrePaises$nombre # asigno el nombre de los paises
# Reacondiciono datos
# rm(codigos)
# ordenar datos con tidyr.
# Ver "https://blog.rstudio.org/2014/07/22/introducing-tidyr/"
library("tidyr")
datos2=datos2%>%gather(Anno,ratio,1:11)
datos2$Anno=as.factor(gsub("X","",datos2$Anno))
datos=datos2
rm(datos2)
rm(nombrePaises)
setwd("~/R/electricityRenewable")
tsdcc330 <- read.delim("~/R/electricityRenewable/tsdcc330.tsv")
datos=tsdcc330
paises=datos[,1]
paises2=strsplit(as.vector(paises),",")
paises3=matrix(unlist(paises2),ncol=3,byrow=TRUE)
codigos=paises3[,3]
codigos
datos["Codigos"]=codigos
datos["Codigos"][datos["Codigos"]=="UK"]="GB"
datos["Codigos"][datos["Codigos"]=="EL"]="GR"
datos=datos[order(datos$Codigos),]
rm(paises)
rm(paises2)
rm(paises3)
datos[,1]=NULL
# Intenta conseguir el nombre del país según el código
datos$Codigos=factor(datos$Codigos) # los códigos de los países en datos
codigos=datos$Codigos
listadoPaises <- read.csv("paises.csv")
# nombre de paises
library(dplyr)
# Utilizar %in% con filter para filtrar los datos
# Creo un data frame, a partir del listado de países, con
# dos columnas, una con el nombre del país, y otra con el código
nombrePaises=filter(listadoPaises,Código%in%codigos)[,c("nombre","Código")]
# Ordenando este vector por código
nombrePaises=nombrePaises[order(nombrePaises$Código),]
nombrePaises
# Crear datos2 como filtrado con los Códigos de países
datos2=filter(datos,Codigos%in%listadoPaises$Código)
datos2$nombrePais=nombrePaises$nombre # asigno el nombre de los paises
# Reacondiciono datos
# rm(codigos)
# ordenar datos con tidyr.
# Ver "https://blog.rstudio.org/2014/07/22/introducing-tidyr/"
library("tidyr")
datos2=datos2%>%gather(Anno,ratio,1:11)
datos2$Anno=as.factor(gsub("X","",datos2$Anno))
datos=datos2
rm(datos2)
rm(nombrePaises)
# Intenta conseguir el nombre del país según el código
codigos=factor(codigos) # los códigos de los países en datos
PIB <- read.csv("~/R/electricityRenewable/PIB_Europeo_mill_euros.csv")
PIB$UNIT=NULL
PIB$NA_ITEM=NULL
PIB$Value=as.numeric(gsub("\\s+","",as.character(PIB$Value)))
PIB$TIME=as.factor(PIB$TIME)
PIB$GEO=as.character(PIB$GEO)
names(PIB)[names(PIB)=="TIME"]="Anno"
names(PIB)[names(PIB)=="GEO"]="Codigos"
names(PIB)[names(PIB)=="Value"]="PIB"
PIB["Codigos"][PIB["Codigos"]=="UK"]="GB"
PIB["Codigos"][PIB["Codigos"]=="EL"]="GR"
str(PIB)
codigos=factor(codigos) # los códigos de los países en datos
ENERGIA <- read.csv("~/R/electricityRenewable/nrg_105a_1_Data.csv")
ENERGIA$Value=as.numeric(gsub("\\s+","",as.character(ENERGIA$Value)))
ENERGIA$TIME=as.factor(ENERGIA$TIME)
ENERGIA$GEO=as.character(ENERGIA$GEO)
names(ENERGIA)[names(ENERGIA)=="TIME"]="Anno"
names(ENERGIA)[names(ENERGIA)=="GEO"]="Codigos"
names(ENERGIA)[names(ENERGIA)=="Value"]="ENERGIA"
ENERGIA["Codigos"][ENERGIA["Codigos"]=="UK"]="GB"
ENERGIA["Codigos"][ENERGIA["Codigos"]=="EL"]="GR"
# Intenta conseguir el nombre del país según el código
RESULTADO=merge(datos,PIB)
RESULTADO=merge(RESULTADO,ENERGIA)
# ordeno algo las columnas
RESULTADO=RESULTADO[c("nombrePais","Codigos","Anno","ratio","PIB","ENERGIA")]
# creando relación
RESULTADO$RENOVABLE=round(RESULTADO$ENERGIA*RESULTADO$ratio/100,2)
POBLACION <- read.delim("~/R/electricityRenewable/poblacion_europea.csv",sep=",")
POBLACION$INDIC_DE=NULL
POBLACION$GEO=as.character(POBLACION$GEO)
POBLACION$GEO[POBLACION$GEO=="UK"]="GB"
POBLACION$GEO[POBLACION$GEO=="EL"]="GR"
POBLACION$GEO=factor(POBLACION$GEO)
names(POBLACION)=c("Anno","Codigos","poblacion") # cambio el nombre de las columnas
RESULTADO2=merge(RESULTADO,POBLACION)
RESULTADO=RESULTADO2
rm(RESULTADO2)
RESULTADO$poblacion=as.numeric(gsub("\\s+","",as.character(RESULTADO$poblacion))) # cambio la población a números
# calculo el ratio por poblacion
str(RESULTADO)
# ratio por habitante
# factor= 10^floor(log10(mean(RESULTADO$poblacion)))
# RESULTADO$ratio.por.poblacion=round(factor*RESULTADO$ratio/RESULTADO$poblacion,2)
#PIB /habitante (* por 100000, ya que son millones de euros)
# RESULTADO$PIB.por.hab=round(RESULTADO$PIB/RESULTADO$poblacion,5)*1000000
# factor2= 10^floor(log10(mean(RESULTADO$PIB.por.hab)))
# RESULTADO$ratio.PIB.por.hab=round(factor2*RESULTADO$ratio/RESULTADO$PIB.por.hab,2)
factor= 10^floor(log10(mean(RESULTADO$poblacion)))
RESULTADO$ren.por.habitante=round(factor*RESULTADO$RENOVABLE/RESULTADO$poblacion,2)
maximo=max(RESULTADO$ren.por.habitante)
RESULTADO$ren.por.habitante=round(100*RESULTADO$ren.por.habitante/maximo,2)
maximo
factor2= 10^floor(log10(mean(RESULTADO$PIB)))
RESULTADO$ren.por.PIB=round(factor2*RESULTADO$RENOVABLE/RESULTADO$PIB,2)
maximo2=max(RESULTADO$ren.por.PIB)
RESULTADO$ren.por.PIB=round(100*RESULTADO$ren.por.PIB/maximo2,2)
maximo2
RESULTADO$nombrePais=droplevels(RESULTADO$nombrePais)
RESULTADO$Anno=droplevels(RESULTADO$Anno)
library(dplyr)
library(RColorBrewer)
# Primero ordeno por año y despues por nombre Pais
RESULTADO=arrange(RESULTADO,Anno,nombrePais)
# ===============================================================
# RATIO
# ===============================================================
m1=RESULTADO$ratio # ratio por pib
m1=matrix(m1,byrow = TRUE,ncol=length(levels(RESULTADO$nombrePais)))
colnames(m1)=levels(RESULTADO$nombrePais)
rownames(m1)=levels(RESULTADO$Anno)
#Seleccionando 5 países
Media=apply(m1,FUN=mean,MARGIN=2)
m1=rbind(m1,Media)
Media=sort(Media, decreasing = TRUE)
Media
paisesEscogidos=c(names(Media)[1:3],"España",tail(names(Media),n=3))
#Seleccionando años
m2=m1[rownames(m1)[1:length(rownames(m1))-1],paisesEscogidos]
colores=colorRampPalette(c("sienna","coral","brown"))
par(cex.axis=0.8)
barplot(m2,beside=TRUE, legend=TRUE, ylim=c(0,max(m2)+20)
# ,col=brewer.pal(length(rownames(m2)),"Greys"),
,col=colores(length(rownames(m2)))
,cex.axis=0.8, las=1
,main="Ratio"
,args.legend=list(x=60,y=100,horiz=FALSE,cex=0.9))
# ===============================================================
# RATIO POR PIB
# ===============================================================
m1=RESULTADO$ren.por.PIB # ratio por pib
m1=matrix(m1,byrow = TRUE,ncol=length(levels(RESULTADO$nombrePais)))
colnames(m1)=levels(RESULTADO$nombrePais)
rownames(m1)=levels(RESULTADO$Anno)
#Seleccionando 5 países
Media=apply(m1,FUN=mean,MARGIN=2)
m1=rbind(m1,Media)
Media=sort(Media, decreasing = TRUE)
paisesEscogidos=c(names(Media)[1:5],"España")
#Seleccionando años
m2=m1[rownames(m1)[1:length(rownames(m1))-1],paisesEscogidos]
colores=colorRampPalette(rgb(128,110,21),rgb(22,39,86),rgb(128,71,21))
par(cex.axis=0.8)
barplot(m2,beside=TRUE, legend=TRUE, ylim=c(0,max(m2))
# ,col=brewer.pal(length(rownames(m2)),"Greys"),
,col=colores(length(rownames(m2)))
,cex.axis=0.8, las=1
,main="Ratio"
,args.legend=list(x=60,y=100,horiz=FALSE,cex=0.9))
Media
nombresMedia=rev(names(Media))
nombresMedia
#
# # ===============================================================
# # RATIO POR PIB por Habitante
# # ===============================================================
#
# # m1=RESULTADO$ratio.por.PIB # ratio por pib
# # m1=RESULTADO$ratio.por.poblacion # ratio por poblacion
# m1=RESULTADO$ratio.PIB.por.hab # ratio por PIB por habitante
#
# m1=matrix(m1,byrow = TRUE,ncol=length(levels(RESULTADO$nombrePais)))
#
# colnames(m1)=levels(RESULTADO$nombrePais)
# rownames(m1)=levels(RESULTADO$Anno)
#
# m2=m1[,c("Alemania","España","Finlandia","Noruega","Estonia")]
# barplot(m2,beside=TRUE, legend=TRUE, ylim=c(0,max(m2)+3)
#         ,col=brewer.pal(length(rownames(m1)),"Paired"),
#         args.legend=list("center",horiz=TRUE,cex=0.8))
