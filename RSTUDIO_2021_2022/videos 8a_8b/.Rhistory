ejemplo = seq(1,2000,by=3)
ejemplo = seq(1,2000,by=0.5)
ejemplo = seq(1,2000,by=0.5)
indices=seq(1,1000,by=3)
ejemplo = seq(1,2000,by=0.5)
indices=seq(1,1000,by=3)
ejemplo[indices]
ejemplo = seq(1,2000,by=0.5)
indices=seq(1,1000,by=3)
ejemplo = seq(1,2000,by=0.5)
indices=seq(1,1000,by=3)
ejemplo[indices]
# Ejercicio 9. Problema Fútbol
# =============================
futbol = read.csv("~/Escritorio/RSTUDIO/futbol.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
View(futbol)
str(futbol)
# Ejercicio 9. Problema Fútbol
# =============================
futbol = read.csv("~/Escritorio/RSTUDIO/futbol.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
# Añado la columna QUNIELA
# cat("\014")
# futbol$Quiniela = ((futbol$Casa-futbol$Visitante)>0)*1+((futbol$Casa-futbol$Visitante)<0)*2
# futbol$Quiniela = as.factor(futbol$Quiniela)
# levels(futbol$Quiniela)=c("X","1","2")
head(futbol,10)
str(futbol)
# Frecuencias absoluta y relativa
t1 = table(futbol$Casa,futbol$Visitante)
t2 = 100*prop.table(t1)
t1
# 1) cargar los datos e inspección
trabajadores = read.csv("datos_ejercicio.csv",header=FALSE)
#2) Tipos de cada dato
str(trabajadores)
#) Categoría es un factor de tres elementos, Sexo de dos y el sueldo un entero
#3) Cambio de los nombres de las columnas
names(trabajadores)=c("Categoría","Sexo","Sueldo")
#4) Número de empleados
dim(trabajadores)[1]
#5) Sueldo más bajo
minimo = trabajadores[trabajadores$Sueldo==min(trabajadores$Sueldo),]
minimo
#6) Y más alto
maximo = trabajadores[trabajadores$Sueldo==max(trabajadores$Sueldo),]
maximo
#10) Función table
t1 = table(mileuristas$Categoría,mileuristas$Sexo)
#11) Función table %
prop.table(t1)*100
#7) menos de mil euros
mileuristas = trabajadores[trabajadores$Sueldo<1000,]
dim(mileuristas)[1]
#8) Cuantos de ellos hombres / nujeres
dim(mileuristas[mileuristas$Sexo=="F",])[1]
dim(mileuristas[mileuristas$Sexo=="M",])[1]
#9) ¿Cuántos de ellos por cada categoría?
dim(mileuristas[mileuristas$Categoría=="I",])[1]
dim(mileuristas[mileuristas$Categoría=="II",])[1]
dim(mileuristas[mileuristas$Categoría=="III",])[1]
#10) Función table
t1 = table(mileuristas$Categoría,mileuristas$Sexo)
#11) Función table %
prop.table(t1)*100
#12) 50 mejores sueldos
em50 = trabajadores[order(trabajadores$Sueldo,decreasing = TRUE),]
em50 = em50[1:50,]
#promedio sueldos mujeres y hombres
mean(em50[em50$Sexo=="M",]$Sueldo)
mean(em50[em50$Sexo=="F",]$Sueldo)
# Tabla de frecuencias
table(em50$Categoría,em50$Sexo)
# 1) cargar los datos e inspección
trabajadores = read.csv("datos_ejercicio.csv",header=FALSE)
#2) Tipos de cada dato
str(trabajadores)
#) Categoría es un factor de tres elementos, Sexo de dos y el sueldo un entero
#3) Cambio de los nombres de las columnas
names(trabajadores)=c("Categoría","Sexo","Sueldo")
#4) Número de empleados
dim(trabajadores)[1]
#5) Sueldo más bajo
minimo = trabajadores[trabajadores$Sueldo==min(trabajadores$Sueldo),]
minimo
#6) Y más alto
maximo = trabajadores[trabajadores$Sueldo==max(trabajadores$Sueldo),]
maximo
#7) menos de mil euros
mileuristas = trabajadores[trabajadores$Sueldo<1000,]
dim(mileuristas)[1]
#8) Cuantos de ellos hombres / nujeres
dim(mileuristas[mileuristas$Sexo=="F",])[1]
dim(mileuristas[mileuristas$Sexo=="M",])[1]
#9) ¿Cuántos de ellos por cada categoría?
dim(mileuristas[mileuristas$Categoría=="I",])[1]
dim(mileuristas[mileuristas$Categoría=="II",])[1]
dim(mileuristas[mileuristas$Categoría=="III",])[1]
#10) Función table
t1 = table(mileuristas$Categoría,mileuristas$Sexo)
#11) Función table %
prop.table(t1)*100
#12) 50 mejores sueldos
em50 = trabajadores[order(trabajadores$Sueldo,decreasing = TRUE),]
em50 = em50[1:50,]
#promedio sueldos mujeres y hombres
mean(em50[em50$Sexo=="M",]$Sueldo)
mean(em50[em50$Sexo=="F",]$Sueldo)
# Tabla de frecuencias
prop.table(table(em50$Categoría,em50$Sexo))
Partidos = read.csv("futbol.csv", header = TRUE)
dim(Partidos) #2870 Partidos
Partidos = rbind(Partidos, data.frame(Casa=c(10, 11, 10),Visitante=c(0, 8, 9)))
tail(Partidos) #Se han añadido correctamente
t1 = table(Partidos$Casa, Partidos$Visitante)
t1
100*prop.table(t1) # *100 para que de porcentajes
resultados = data.frame(t1)
resultados$Var1 = as.character(resultados$Var1)
resultados$Var2 = as.character(resultados$Var2)
str(resultados)
resultados = rbind(resultados , data.frame(Var1=c(9,9,9,9,9,9,9,9,9,9), Var2=c(0,1,2,3,4,5,6,7,8,9),
Freq=c(0,0,0,0,0,0,0,0,0,0)))
# ordenar
resultados$Var1 = as.numeric(resultados$Var1)
resultados$Var2 = as.numeric(resultados$Var2)
resultados = resultados[order(resultados$Var2,resultados$Var1),]
# refactoriza
resultados$Var1 =as.factor(resultados$Var1)
resultados$Var2 = as.factor(resultados$Var2)
length(which(resultados$Freq==0)) #51 resultados
max(resultados$Freq) #96 partidos tienen el mismo resultado
# tabla recalculada
t1 = xtabs(Freq~Var1+Var2,data=resultados)
t3=apply(t1,MARGIN=1,FUN=sum)
t4 = prop.table(t3)*100
t4["0"]
resultados[resultados$Freq==96,] #El resultado más frecuente es 2-1
casa0=prop.table(t1)[,"0"]*100
casa0
sum(casa0)#Hay un 16,6% que marque 0 goles el equipo de casa
vis0=prop.table(cas0t1)["0",]*100
vis0
sum(vis0)#Hay un 16,7% que marque 0 goles el equipo visitante
barplot(casa0, col=c("white","black"),ylim=c(0,3),main="Resultados con 0 goles en casa", ylab
="Frecuencia Relativa")
ganadosCasa = dim(Partidos[Partidos$Casa>Partidos$Visitante,])[1]/dim(Partidos)[1]*100#43%
ganadosVis = dim(Partidos[Partidos$Casa<Partidos$Visitante,])[1]/dim(Partidos)[1]*100#43%
empatados = dim(Partidos[Partidos$Casa==Partidos$Visitante,])[1]/dim(Partidos)[1]*100#43%
winrate= c(ganadosCasa,ganadosVis,empatados)
barplot(prop.table(winrate)*100 , col=c("green","red","cyan"), ylim=c(0,100),
main = "Indice de victoria", ylab="Frecuencia relativa en %",
legend.text=c("Victoria casa","Victoria visitante","Empate"))
######################################################
