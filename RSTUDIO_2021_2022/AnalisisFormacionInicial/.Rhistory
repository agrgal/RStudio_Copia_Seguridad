axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Resto de Especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq,fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) + #para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .7,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Resto de Especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq,fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) + #para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .1,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Resto de Especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq,fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) + #para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Resto de Especialidades"))
bp
View(df)
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
df=df[order(df$Freq),] #Ordeno el datafre segñun la frecuencia
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq,fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
df=df[order(df$Freq),] #Ordeno el datafre segñun la frecuencia
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq,fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
df=df[order(df$Freq),] #Ordeno el datafre segñun la frecuencia
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq,fill=df$restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
df=df[order(df$Freq),] #Ordeno el datafre segñun la frecuencia
restoEspecialidades = df$restoEspecialidades
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq,fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
df=df[order(df$Freq),] #Ordeno el datafre segñun la frecuencia
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
View(df)
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
df=df[order(df$Freq),] #Ordeno el datafre segñun la frecuencia
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
# df=df[order(df$Freq),] #Ordeno el datafre segñun la frecuencia
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
library(printr)
# Datos Cádiz grupo 2
datos = read.csv2("datosCadizGrupo2.csv",header=TRUE,sep=",")
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
# Para gráfica 1
especialidadCoordinadores = toupper(substr(datos$Especialidad.de.la.persona.que.coordina.el.proyecto,1,3))
especialidadCoordinadores = as.factor(especialidadCoordinadores)
ademas= as.factor(datos$Además.de.la.persona.que.coordina.el.proyecto...cuántos.miembros.del.claustro.participan.activamente.en.el.mismo.)
restoEspecialidades = strsplit(as.character(datos$X.De.qué.especialidad.son.el.resto.de.participantes.en.el.proyecto),",")
restoEspecialidades = as.factor(trim(unlist(restoEspecialidades, use.names = FALSE)))
restoEspecialidades
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
# df=df[order(df$Freq),] #Ordeno el datafre segñun la frecuencia
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
df=df[order(df$Freq),] #Ordeno el datafre según la frecuencia
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
View(df)
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df=df[order(df$Freq),] #Ordeno el datafre según la frecuencia
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df=df[order(df$Freq, decreasing=TRUE),] #Ordeno el datafre según la frecuencia
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df=df[order(df$Freq, decreasing=TRUE),] #Ordeno el datafre según la frecuencia
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp #mostrar el gráfico
# https://r4ds.had.co.nz/graphics-for-communication.html#figure-sizing
library(ggplot2)
library(scales)
library(ggrepel)
df<-data.frame(table(restoEspecialidades))
df=df[order(df$Freq, decreasing=TRUE),] #Ordeno el datafre según la frecuencia
df$pos = (cumsum(c(0, df$Freq)) + c(df$Freq / 2, .01))[1:nrow(df)]
df2=df
colourCount = length(unique(df$restoEspecialidades))
getPalette = colorRampPalette(brewer.pal(12, "Set3"))
bp<- ggplot(df2, aes(x="", y=Freq, fill=restoEspecialidades))+
geom_bar(width = 1, stat = "identity",color="white",
position = position_stack(reverse = TRUE), ) +
# para que funcione el cálculo con df$pos
# hay que añadir position stack reverse
coord_polar("y") +
# geom_text(aes(label = percent(Freq/100),x=1.7),
#         position = position_stack(vjust = 0.5),size=3) +
geom_text_repel(aes(x = 1.4, y = pos, label = percent(Freq/100)),
nudge_x = .3,
segment.size = 0.3,
show.legend = FALSE) +
scale_fill_manual(values=getPalette(colourCount))+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank())+
guides(fill = guide_legend(title = "Nº y % del resto de especialidades"))
bp #mostrar el gráfico
