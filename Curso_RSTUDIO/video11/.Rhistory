# =============================
futbol = read.csv("futbolNEW.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
# Añado la columna QUNIELA
cat("\014")
futbol$Quiniela = ((futbol$Casa-futbol$Visitante)>0)*1+((futbol$Casa-futbol$Visitante)<0)*2
futbol$Quiniela = as.factor(futbol$Quiniela)
levels(futbol$Quiniela)=c("X","1","2")
head(futbol,10)
str(futbol)
# Añado el average
futbol$Average = (futbol$Casa>futbol$Visitante)*(futbol$Casa-futbol$Visitante)
# Diferencia si han ganado los de casa, y cero en caso contrario
liga = futbol[,c(3,4)]
# Ordenar los factores
liga$Quiniela = ordered(liga$Quiniela,levels=c("1","X","2"))
liga$Average = ordered(liga$Average)
cat("\014")
# Obtener la tabla de frecuencias absolutas acumuladas del data frame liga.
# ¿Cuántos partidos han ganado los de casa?
t1=table(liga)
t1ACU = t(apply(t1,MARGIN=1,FUN=cumsum))
t1ACU
sum(t1["1",]) # otra forma de verlo
# Obtener la tabla de frecuencias relativas SIN ACUMULAR del data frame liga.
# ¿Qué es más probable, que el equipo empate o que gane 1-0? ¿En qué porcentaje?
t2=prop.table(table(liga))*100
t2
# Obtener la tabla de frecuencias relativas ACUMULADAS del data frame liga.
# ¿Qué es más probable, que el equipo gane o pierda?
t2ACU=t(apply(round(t2,2),MARGIN=1,FUN=cumsum))
t2ACU
sprintf("Es más probable que gane por un margen del %.2f%%",t2ACU["1","10"]-t2ACU["2","10"] )
# ¿Qué es más probable, que el equipo pierda o que gane por menos
# de 4 goles de diferencia? Indica los datos de porcentaje.
sprintf("Es más probable que pierda por un margen del %.2f%%",
t2ACU["2","10"]-t2ACU["1","3"] )
barplot(t1ACU,beside=TRUE, legend.text = levels(unique(liga$Quiniela))
,col=topo.colors(length(unique(liga$Quiniela)))
,args.legend=list(y=1500,x=10,cex=0.55,ncol=2)
,ylim=c(0,max(t1ACU)+100))
t1ACU
# Ejercicio 9. Problema Fútbol
# =============================
futbol = read.csv("futbolNEW.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
# Añado la columna QUNIELA
cat("\014")
futbol$Quiniela = ((futbol$Casa-futbol$Visitante)>0)*1+((futbol$Casa-futbol$Visitante)<0)*2
futbol$Quiniela = as.factor(futbol$Quiniela)
levels(futbol$Quiniela)=c("X","1","2")
head(futbol,10)
str(futbol)
# Añado el average
futbol$Average = (futbol$Casa>futbol$Visitante)*(futbol$Casa-futbol$Visitante)
# Diferencia si han ganado los de casa, y cero en caso contrario
liga = futbol[,c(3,4)]
# Ordenar los factores
liga$Quiniela = ordered(liga$Quiniela,levels=c("1","X","2"))
liga$Average = ordered(liga$Average)
cat("\014")
# Obtener la tabla de frecuencias absolutas acumuladas del data frame liga.
# ¿Cuántos partidos han ganado los de casa?
t1=table(liga)
t1ACU = t(apply(t1,MARGIN=1,FUN=cumsum))
t1ACU
sum(t1["1",]) # otra forma de verlo
# Obtener la tabla de frecuencias relativas SIN ACUMULAR del data frame liga.
# ¿Qué es más probable, que el equipo empate o que gane 1-0? ¿En qué porcentaje?
t2=prop.table(table(liga))*100
t2
# Obtener la tabla de frecuencias relativas ACUMULADAS del data frame liga.
# ¿Qué es más probable, que el equipo gane o pierda?
t2ACU=t(apply(round(t2,2),MARGIN=1,FUN=cumsum))
t2ACU
sprintf("Es más probable que gane por un margen del %.2f%%",t2ACU["1","10"]-t2ACU["2","10"] )
# ¿Qué es más probable, que el equipo pierda o que gane por menos
# de 4 goles de diferencia? Indica los datos de porcentaje.
sprintf("Es más probable que pierda por un margen del %.2f%%",
t2ACU["2","10"]-t2ACU["1","3"] )
barplot(t1ACU,beside=TRUE, legend.text = levels(unique(liga$Quiniela))
,col=topo.colors(length(unique(liga$Quiniela)))
,args.legend=list(y=1500,x=10,cex=0.55,ncol=2)
,ylim=c(0,max(t1ACU)+200))
# Ejercicio 9. Problema Fútbol
# =============================
futbol = read.csv("futbolNEW.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
# Añado la columna QUNIELA
cat("\014")
futbol$Quiniela = ((futbol$Casa-futbol$Visitante)>0)*1+((futbol$Casa-futbol$Visitante)<0)*2
futbol$Quiniela = as.factor(futbol$Quiniela)
levels(futbol$Quiniela)=c("X","1","2")
head(futbol,10)
str(futbol)
# Añado el average
futbol$Average = (futbol$Casa>futbol$Visitante)*(futbol$Casa-futbol$Visitante)
# Diferencia si han ganado los de casa, y cero en caso contrario
liga = futbol[,c(3,4)]
# Ordenar los factores
liga$Quiniela = ordered(liga$Quiniela,levels=c("1","X","2"))
liga$Average = ordered(liga$Average)
cat("\014")
# Obtener la tabla de frecuencias absolutas acumuladas del data frame liga.
# ¿Cuántos partidos han ganado los de casa?
t1=table(liga)
t1ACU = t(apply(t1,MARGIN=1,FUN=cumsum))
t1ACU
sum(t1["1",]) # otra forma de verlo
# Obtener la tabla de frecuencias relativas SIN ACUMULAR del data frame liga.
# ¿Qué es más probable, que el equipo empate o que gane 1-0? ¿En qué porcentaje?
t2=prop.table(table(liga))*100
t2
# Obtener la tabla de frecuencias relativas ACUMULADAS del data frame liga.
# ¿Qué es más probable, que el equipo gane o pierda?
t2ACU=t(apply(round(t2,2),MARGIN=1,FUN=cumsum))
t2ACU
sprintf("Es más probable que gane por un margen del %.2f%%",t2ACU["1","10"]-t2ACU["2","10"] )
# ¿Qué es más probable, que el equipo pierda o que gane por menos
# de 4 goles de diferencia? Indica los datos de porcentaje.
sprintf("Es más probable que pierda por un margen del %.2f%%",
t2ACU["2","10"]-t2ACU["1","3"] )
barplot(t1ACU["1",],beside=TRUE, legend.text = levels(unique(liga$Quiniela))
,col=topo.colors(length(unique(liga$Quiniela)))
,args.legend=list(y=1500,x=10,cex=0.55,ncol=2)
,ylim=c(0,max(t1ACU)+200))
# Ejercicio 9. Problema Fútbol
# =============================
futbol = read.csv("futbolNEW.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
# Añado la columna QUNIELA
cat("\014")
futbol$Quiniela = ((futbol$Casa-futbol$Visitante)>0)*1+((futbol$Casa-futbol$Visitante)<0)*2
futbol$Quiniela = as.factor(futbol$Quiniela)
levels(futbol$Quiniela)=c("X","1","2")
head(futbol,10)
str(futbol)
# Añado el average
futbol$Average = (futbol$Casa>futbol$Visitante)*(futbol$Casa-futbol$Visitante)
# Diferencia si han ganado los de casa, y cero en caso contrario
liga = futbol[,c(3,4)]
# Ordenar los factores
liga$Quiniela = ordered(liga$Quiniela,levels=c("1","X","2"))
liga$Average = ordered(liga$Average)
cat("\014")
# Obtener la tabla de frecuencias absolutas acumuladas del data frame liga.
# ¿Cuántos partidos han ganado los de casa?
t1=table(liga)
t1ACU = t(apply(t1,MARGIN=1,FUN=cumsum))
t1ACU
sum(t1["1",]) # otra forma de verlo
# Obtener la tabla de frecuencias relativas SIN ACUMULAR del data frame liga.
# ¿Qué es más probable, que el equipo empate o que gane 1-0? ¿En qué porcentaje?
t2=prop.table(table(liga))*100
t2
# Obtener la tabla de frecuencias relativas ACUMULADAS del data frame liga.
# ¿Qué es más probable, que el equipo gane o pierda?
t2ACU=t(apply(round(t2,2),MARGIN=1,FUN=cumsum))
t2ACU
sprintf("Es más probable que gane por un margen del %.2f%%",t2ACU["1","10"]-t2ACU["2","10"] )
# ¿Qué es más probable, que el equipo pierda o que gane por menos
# de 4 goles de diferencia? Indica los datos de porcentaje.
sprintf("Es más probable que pierda por un margen del %.2f%%",
t2ACU["2","10"]-t2ACU["1","3"] )
barplot(t1ACU,beside=TRUE, legend.text = levels(unique(liga$Quiniela))
,col=topo.colors(length(unique(liga$Quiniela)))
,args.legend=list(y=1500,x=10,cex=0.55,ncol=2)
,ylim=c(0,max(t1ACU)+200))
# Ejercicio 9. Problema Fútbol
# =============================
futbol = read.csv("futbolNEW.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
# Añado la columna QUNIELA
cat("\014")
futbol$Quiniela = ((futbol$Casa-futbol$Visitante)>0)*1+((futbol$Casa-futbol$Visitante)<0)*2
futbol$Quiniela = as.factor(futbol$Quiniela)
levels(futbol$Quiniela)=c("X","1","2")
head(futbol,10)
str(futbol)
# Añado el average
futbol$Average = (futbol$Casa>futbol$Visitante)*(futbol$Casa-futbol$Visitante)
# Diferencia si han ganado los de casa, y cero en caso contrario
liga = futbol[,c(3,4)]
# Ordenar los factores
liga$Quiniela = ordered(liga$Quiniela,levels=c("1","X","2"))
liga$Average = ordered(liga$Average)
cat("\014")
# Obtener la tabla de frecuencias absolutas acumuladas del data frame liga.
# ¿Cuántos partidos han ganado los de casa?
t1=table(liga)
t1ACU = t(apply(t1,MARGIN=1,FUN=cumsum))
t1ACU
sum(t1["1",]) # otra forma de verlo
# Obtener la tabla de frecuencias relativas SIN ACUMULAR del data frame liga.
# ¿Qué es más probable, que el equipo empate o que gane 1-0? ¿En qué porcentaje?
t2=prop.table(table(liga))*100
t2
# Obtener la tabla de frecuencias relativas ACUMULADAS del data frame liga.
# ¿Qué es más probable, que el equipo gane o pierda?
t2ACU=t(apply(round(t2,2),MARGIN=1,FUN=cumsum))
t2ACU
sprintf("Es más probable que gane por un margen del %.2f%%",t2ACU["1","10"]-t2ACU["2","10"] )
# ¿Qué es más probable, que el equipo pierda o que gane por menos
# de 4 goles de diferencia? Indica los datos de porcentaje.
sprintf("Es más probable que pierda por un margen del %.2f%%",
t2ACU["2","10"]-t2ACU["1","3"] )
barplot(t1ACU, legend.text = levels(unique(liga$Quiniela))
,col=topo.colors(length(unique(liga$Quiniela)))
,args.legend=list(y=1500,x=10,cex=0.55,ncol=2)
,ylim=c(0,max(t1ACU)+200))
# Ejercicio 9. Problema Fútbol
# =============================
futbol = read.csv("futbolNEW.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
# Añado la columna QUNIELA
cat("\014")
futbol$Quiniela = ((futbol$Casa-futbol$Visitante)>0)*1+((futbol$Casa-futbol$Visitante)<0)*2
futbol$Quiniela = as.factor(futbol$Quiniela)
levels(futbol$Quiniela)=c("X","1","2")
head(futbol,10)
str(futbol)
# Añado el average
futbol$Average = (futbol$Casa>futbol$Visitante)*(futbol$Casa-futbol$Visitante)
# Diferencia si han ganado los de casa, y cero en caso contrario
liga = futbol[,c(3,4)]
# Ordenar los factores
liga$Quiniela = ordered(liga$Quiniela,levels=c("1","X","2"))
liga$Average = ordered(liga$Average)
cat("\014")
# Obtener la tabla de frecuencias absolutas acumuladas del data frame liga.
# ¿Cuántos partidos han ganado los de casa?
t1=table(liga)
t1ACU = t(apply(t1,MARGIN=1,FUN=cumsum))
t1ACU
sum(t1["1",]) # otra forma de verlo
# Obtener la tabla de frecuencias relativas SIN ACUMULAR del data frame liga.
# ¿Qué es más probable, que el equipo empate o que gane 1-0? ¿En qué porcentaje?
t2=prop.table(table(liga))*100
t2
# Obtener la tabla de frecuencias relativas ACUMULADAS del data frame liga.
# ¿Qué es más probable, que el equipo gane o pierda?
t2ACU=t(apply(round(t2,2),MARGIN=1,FUN=cumsum))
t2ACU
sprintf("Es más probable que gane por un margen del %.2f%%",t2ACU["1","10"]-t2ACU["2","10"] )
# ¿Qué es más probable, que el equipo pierda o que gane por menos
# de 4 goles de diferencia? Indica los datos de porcentaje.
sprintf("Es más probable que pierda por un margen del %.2f%%",
t2ACU["2","10"]-t2ACU["1","3"] )
barplot(t1ACU,beside=TRUE, legend.text = levels(unique(liga$Quiniela))
,col=topo.colors(length(unique(liga$Quiniela)))
,args.legend=list(y=1500,x=10,cex=0.55,ncol=2)
,ylim=c(0,max(t1ACU)+200))
Partidos = read.csv("futbolNEW.csv", header = TRUE)
Partidos = rbind(Partidos,  data.frame(Casa=c(10, 11, 10),Visitante=c(0, 8, 9)))
Partidos$Quiniela= ((Partidos$Casa>Partidos$Visitante) + (Partidos$Casa<Partidos$Visitante)*2)
Partidos$Quiniela= as.factor(Partidos$Quiniela)
Partidos$Quiniela= factor(Partidos$Quiniela, labels = c("X","1","2"))
ventajagoles = c(Partidos$Casa-Partidos$Visitante)
derrotascero = c(ventajagoles>0)
average = c(derrotascero*ventajagoles)
liga = data.frame(Partidos$Quiniela, average)
View(liga)
absolutacumulada=t(apply(table(liga), MARGIN = 1, FUN = cumsum))
absolutacumulada #1238 partidos ganados en casa
relativa = prop.table(table(liga))*100
relativa #Hay un 16,7% de empate y un 14,6% de victoria de casa con un gol
t(apply(relativa, MARGIN = 1, FUN = cumsum)) #43% de que gane contra 40%de que pierda.
barplot(absolutacumulada, col=rainbow(7), ylim = c(0,3500),
main = "Ventaja de goles en casa acumulada", xlab="Ventaja de goles(acumulada)",
ylab= "Número de partidos", legend.text = c("Empate","Victoria visitante",
"Victoria casa") args.legend = list(x = "top")))
Partidos = read.csv("futbolNEW.csv", header = TRUE)
Partidos = rbind(Partidos,  data.frame(Casa=c(10, 11, 10),Visitante=c(0, 8, 9)))
Partidos$Quiniela= ((Partidos$Casa>Partidos$Visitante) + (Partidos$Casa<Partidos$Visitante)*2)
Partidos$Quiniela= as.factor(Partidos$Quiniela)
Partidos$Quiniela= factor(Partidos$Quiniela, labels = c("X","1","2"))
ventajagoles = c(Partidos$Casa-Partidos$Visitante)
derrotascero = c(ventajagoles>0)
average = c(derrotascero*ventajagoles)
liga = data.frame(Partidos$Quiniela, average)
liga$average= as.factor(liga$average)
liga$average=sort(liga$average,decreasing = FALSE)
liga$Partidos.Quiniela = ordered(liga$Partidos.Quiniela, levels=c("X","2","1"))
liga$Partidos.Quiniela= sort(liga$Partidos.Quiniela , decreasing = FALSE)
str(liga)
absolutacumulada=t(apply(table(liga), MARGIN = 1, FUN = cumsum))
absolutacumulada #1238 partidos ganados en casa
relativa = prop.table(table(liga))*100
relativa #Hay un 16,7% de empate y un 14,6% de victoria de casa con un gol
t(apply(relativa, MARGIN = 1, FUN = cumsum)) #43% de que gane contra 40%de que pierda.
#Es mas probable que pierda, con un 40%, a con una diferencia de menos de 4 goles, con un 33,8%.
barplot(absolutacumulada, col=rainbow(7), ylim = c(0,3500),
main = "Ventaja de goles en casa acumulada", xlab="Ventaja de goles(acumulada)",
ylab= "Número de partidos",
legend.text = c("Empate","Victoria visitante",
"Victoria casa"),
args.legend = list(x = "top"))
#1
PARTIDOS=read.csv2("futbolNEW.csv",header=TRUE,sep=",")
#1
PARTIDOS=read.csv2("futbolNEW.csv",header=TRUE,sep=",")
#2
PARTIDOSFILANUEVA=data.frame(Casa=c(10,11,10),Visitante=c(0,8,9))
PARTIDOS= rbind(PARTIDOS,PARTIDOSFILANUEVA)
View(PARTIDOSFILANUEVA)
View(PARTIDOS)
#1
PARTIDOS=read.csv2("futbolNEW.csv",header=TRUE,sep=",")
#2
PARTIDOSFILANUEVA=data.frame(Casa=c(10,11,10),Visitante=c(0,8,9))
PARTIDOS= rbind(PARTIDOS,PARTIDOSFILANUEVA)
#3
PARTIDOS$QUINIELA = (PARTIDOS$Casa>PARTIDOS$Visitante) + 2*(PARTIDOS$Casa<PARTIDOS$Visitante)
PARTIDOS$QUINIELA = factor(PARTIDOS$QUINIELA,labels =c("X","1","2"))
#1
PARTIDOS=read.csv2("futbolNEW.csv",header=TRUE,sep=",")
#2
PARTIDOSFILANUEVA=data.frame(Casa=c(10,11,10),Visitante=c(0,8,9))
PARTIDOS= rbind(PARTIDOS,PARTIDOSFILANUEVA)
#3
PARTIDOS$QUINIELA = (PARTIDOS$Casa>PARTIDOS$Visitante) + 2*(PARTIDOS$Casa<PARTIDOS$Visitante)
PARTIDOS$QUINIELA = factor(PARTIDOS$QUINIELA,labels =c("X","1","2"))
#4
Average =(PARTIDOS$Casa>PARTIDOS$Visitante)*(PARTIDOS$Casa-PARTIDOS$Visitante)
Liga=data.frame(PARTIDOS$QUINIELA,Average)
View(Liga)
t1=table(Liga)
t1
apply(t1,MARGIN=1,FUN=cumsum)
t2=100*prop.table(t1)
t2
apply(t2,MARGIN=1,FUN=cumsum)
FRECUENCIASABSOLUTAS=cumsum(t1["1",])
FRECUENCIASABSOLUTAS
MAXIMO=max(FRECUENCIASABSOLUTAS[,c(2)])+100
MAXIMO
GRAFICA=barplot(FRECUENCIASABSOLUTAS[,c(2)],main= "RESULTADOS",
col=barplot(rep(1,14), col = hsv(seq(0,1 - 1/14,length.out=14),1,1)),
legend.text= c("PARTIDOS"),
args.legend= list(x=2, y=1500, cex=0.75),
xlab="RESULTADOS", ylab= "F1", ylim=c (0,MAXIMO))
FRECUENCIASABSOLUTAS=cumsum(t1["1",])
FRECUENCIASABSOLUTAS
MAXIMO=max(FRECUENCIASABSOLUTAS)+100
MAXIMO
GRAFICA=barplot(FRECUENCIASABSOLUTAS,main= "RESULTADOS",
col=barplot(rep(1,14), col = hsv(seq(0,1 - 1/14,length.out=14),1,1)),
legend.text= c("PARTIDOS"),
args.legend= list(x=2, y=1500, cex=0.75),
xlab="RESULTADOS", ylab= "F1", ylim=c (0,MAXIMO))
FRECUENCIASABSOLUTAS=cumsum(t1["1",])
FRECUENCIASABSOLUTAS
MAXIMO=max(FRECUENCIASABSOLUTAS)+100
MAXIMO
GRAFICA=barplot(FRECUENCIASABSOLUTAS,main= "RESULTADOS",
col=barplot(rep(1,14), col = hsv(seq(0,1 - 1/14,length.out=14),1,1)),
legend.text= c("PARTIDOS"),
args.legend= list(x=2, y=1500, cex=0.75),
xlab="RESULTADOS", ylab= "F1", ylim=c (0,MAXIMO))
text(x=GRAFICA, y=FRECUENCIASABSOLUTAS+50,labels= FRECUENCIASABSOLUTAS)
FRECUENCIASABSOLUTAS=cumsum(t1["1",])
FRECUENCIASABSOLUTAS
#Cargar el dataframe con los valores del fichero adjunto.
parametros=read.csv("environment-indicators-for-spain-1.csv",header=TRUE,sep=",")
#Analiza el dataframe usando str.
str(parametros)
#Extrae los datos cuyo indicador de nombre sea "CO2 emissions from solid fuel
# consumption (kt)".
co2=parametros$Value[parametros$Indicator.Name=="CO2 emissions from solid fuel consumption (kt)"]
co2
str(co2)
#Utiliza la orden cut para obtener un vector categorizable del vector co2. Dentro de la orden
# cut, en el parámetro break, calcula un vector desde el mínimo de CO2 hasta el máximo de
# CO2 más uno, con cinco valores igualmente espaciados. Poner de etiquetas bajo, medio, alto
# y muy alto.
catco2=cut(co2, breaks = seq(min(co2), max(co2)+1, length.out=5), labels = c("bajo",
"medio", "alto", "muy alto"), right = FALSE)
catco2
catco2
#Conseguir que sea un factor ordenado.
catco2=ordered(catco2,levels=c("bajo","medio", "alto", "muy alto"))
catco2
str(catco2)
#Dibujar una gráfica barplot del factor ordenado. Frecuencias absolutas.
t1=table(catco2)
t1
maximo=max(t1)+15
grafica1=barplot(t1,
main = "Valores de CO2",
col=topo.colors(length(t2),alpha = 1, rev = FALSE),
legend.text = c("Niveles de CO2"),
args.legend = list(x=5,y=40, cex=1),
xlab="Clasificación de valores", ylab = "Frecuencia", ylim=c(0,maximo))
text(x=grafica1,y=t1+3,labels=t1)
#Dibujar una gráfica barplot del factor ordenado. Frecuencias relativas.
t2=round(100*prop.table(t1),2)
t2
maximo=max(t2)+15
grafica1=barplot(t2,
main = "Valores de CO2 en porcentaje",
col=heat.colors(length(t2), alpha = 1, rev = FALSE),
legend.text = c("Niveles de CO2 (%)"),
args.legend = list(x=5,y=63, cex=1),
xlab="Clasificación de valores", ylab = "Frecuencia", ylim=c(0,maximo))
text(x=grafica1,y=t2+3,labels=paste0(t2,"%"))
#Cargar el dataframe con los valores del fichero adjunto.
parametros=read.csv("environment-indicators-for-spain-1.csv",header=TRUE,sep=",")
#Analiza el dataframe usando str.
str(parametros)
#Cargar el dataframe con los valores del fichero adjunto.
parametros=read.csv("environment-indicators-for-spain-1.csv",header=TRUE,sep=",")
#Analiza el dataframe usando str.
str(parametros)
#Extrae los datos cuyo indicador de nombre sea "CO2 emissions from solid fuel
# consumption (kt)".
co2=parametros$Value[parametros$Indicator.Name=="CO2 emissions from solid fuel consumption (kt)"]
co2
str(co2)
#Utiliza la orden cut para obtener un vector categorizable del vector co2. Dentro de la orden
# cut, en el parámetro break, calcula un vector desde el mínimo de CO2 hasta el máximo de
# CO2 más uno, con cinco valores igualmente espaciados. Poner de etiquetas bajo, medio, alto
# y muy alto.
catco2=cut(co2, breaks = seq(min(co2), max(co2)+1, length.out=5), labels = c("bajo",
"medio", "alto", "muy alto"), right = FALSE)
catco2
#Conseguir que sea un factor ordenado.
catco2=ordered(catco2,levels=c("bajo","medio", "alto", "muy alto"))
catco2
str(catco2)
#Dibujar una gráfica barplot del factor ordenado. Frecuencias absolutas.
t1=table(catco2)
t1
maximo=max(t1)+15
grafica1=barplot(t1,
main = "Valores de CO2",
col=topo.colors(length(t1),alpha = 1, rev = FALSE),
legend.text = c("Niveles de CO2"),
args.legend = list(x=5,y=40, cex=1),
xlab="Clasificación de valores", ylab = "Frecuencia", ylim=c(0,maximo))
text(x=grafica1,y=t1+3,labels=t1)
#Dibujar una gráfica barplot del factor ordenado. Frecuencias relativas.
t2=round(100*prop.table(t1),2)
t2
maximo=max(t2)+15
grafica1=barplot(t2,
main = "Valores de CO2 en porcentaje",
col=heat.colors(length(t2), alpha = 1, rev = FALSE),
legend.text = c("Niveles de CO2 (%)"),
args.legend = list(x=5,y=63, cex=1),
xlab="Clasificación de valores", ylab = "Frecuencia", ylim=c(0,maximo))
text(x=grafica1,y=t2+3,labels=paste0(t2,"%"))
#Cargar el dataframe con los valores del fichero adjunto.
parametros=read.csv("environment-indicators-for-spain-1.csv",header=TRUE,sep=",")
#Analiza el dataframe usando str.
str(parametros)
#Extrae los datos cuyo indicador de nombre sea "CO2 emissions from solid fuel
# consumption (kt)".
co2=parametros$Value[parametros$Indicator.Name=="CO2 emissions from solid fuel consumption (kt)"]
co2
str(co2)
co2
#Cargar el dataframe con los valores del fichero adjunto.
parametros=read.csv("environment-indicators-for-spain-1.csv",header=TRUE,sep=",")
#Analiza el dataframe usando str.
str(parametros)
#Extrae los datos cuyo indicador de nombre sea "CO2 emissions from solid fuel
# consumption (kt)".
co2=parametros$Value[parametros$Indicator.Name=="CO2 emissions from solid fuel consumption (kt)"]
co2
str(co2)
# Ejercicio 9. Problema Fútbol
# =============================
futbol = read.csv("futbolNEW.csv",header=TRUE)
# Añado los partidos
futbol = rbind(futbol,data.frame(Casa=c(10,11,10),Visitante=c(0,8,9)))
tail(futbol)
# Añado la columna QUNIELA
cat("\014")
futbol$Quiniela = ((futbol$Casa-futbol$Visitante)>0)*1+((futbol$Casa-futbol$Visitante)<0)*2
futbol$Quiniela = as.factor(futbol$Quiniela)
levels(futbol$Quiniela)=c("X","1","2")
head(futbol,10)
str(futbol)
# Añado el average
futbol$Average = (futbol$Casa>futbol$Visitante)*(futbol$Casa-futbol$Visitante)
# Diferencia si han ganado los de casa, y cero en caso contrario
liga = futbol[,c(3,4)]
View(liga)
# Ordenar los factores
liga$Quiniela = ordered(liga$Quiniela,levels=c("1","X","2"))
liga$Average = ordered(liga$Average)
cat("\014")
str(liga)
t1=table(liga)
t1
t1ACU = t(apply(t1,MARGIN=1,FUN=cumsum))
t1ACU
sum(t1["1",]) # otra forma de verlo
t2=prop.table(table(liga))*100
t2
