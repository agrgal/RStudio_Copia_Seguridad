l1=lm(Temp~Wind,data=calidadAire2)
plot(x=calidadAire2$Wind,y=calidadAire2$Temp,xlim=c(0,30),ylim=
c(0,100))
plot(calidadAire2$Wind,calidadAire2$Temp,xlim=c(0,30),ylim=c(0,1
00))
abline(l1)
m = l1$coefficients[2]
n = l1$coefficients[1]
summary(l1)$r.squared
calidadAire2[ calidadAire2$temp>90, ]
View(calidadAire)
calidadAire = airquality
calidadAire2=calidadAire [,c(3,4,5,6)]
dim(calidadAire)
calidadAire2$Date=paste0(calidadAire2$Day,".",calidadAire2$Month)                        h)
l1=lm(Temp~Wind,data=calidadAire2)
plot(x=calidadAire2$Wind,y=calidadAire2$Temp,xlim=c(0,30),ylim=
c(0,100))
plot(calidadAire2$Wind,calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))                                                           00))
abline(l1)
m = l1$coefficients[2]
n = l1$coefficients[1]
summary(l1)$r.squared
calidadAire2[ calidadAire2$temp>90, ]
calidadAire = airquality
calidadAire2=calidadAire [,c(3,4,5,6)]
dim(calidadAire)
calidadAire2$Date=paste0(calidadAire2$Day,".",calidadAire2$Month)
plot(x=calidadAire2$Wind,y=calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
plot(calidadAire2$Wind,calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
abline(l1)
m = l1$coefficients[2]
n = l1$coefficients[1]
summary(l1)$r.squared
calidadAire2[ calidadAire2$temp>90, ]
m
calidadAire2[ calidadAire2$temp>90, ]
calidadAire = airquality
calidadAire2=calidadAire [,c(3,4,5,6)]
dim(calidadAire)
calidadAire2$Date=paste0(calidadAire2$Day,".",calidadAire2$Month)
plot(x=calidadAire2$Wind,y=calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
plot(calidadAire2$Wind,calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
abline(l1)
m = l1$coefficients[2]
n = l1$coefficients[1]
summary(l1)$r.squared
calidadAire2[calidadAire2$temp>90,]
calidadAire = airquality
calidadAire2=calidadAire [,c(3,4,5,6)]
dim(calidadAire)
calidadAire2$Date=paste0(calidadAire2$Day,".",calidadAire2$Month)
plot(x=calidadAire2$Wind,y=calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
plot(calidadAire2$Wind,calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
abline(l1)
m = l1$coefficients[2]
n = l1$coefficients[1]
summary(l1)$r.squared
calidadAire2[calidadAire2$Temp>90,]
calidadAire = airquality
calidadAire2=calidadAire [,c(3,4,5,6)]
dim(calidadAire)
calidadAire2$Date=paste0(calidadAire2$Day,".",calidadAire2$Month)
plot(x=calidadAire2$Wind,y=calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
plot(calidadAire2$Wind,calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
abline(l1)
m = l1$coefficients[2]
n = l1$coefficients[1]
summary(l1)$r.squared
dim(calidadAire2[calidadAire2$Temp>90,])
calidadAire = airquality
calidadAire2 = calidadAire [ , c(3,4,5,6) ]
dim(calidadAire2)
calidadAire2$Date=paste0(calidadAire2$Day,
".",calidadAire2$Month)
l1=lm(Temp~Wind,data=calidadAire2)
plot(x=calidadAire2$Wind,y=calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
plot(calidadAire2$Wind,calidadAire2$Temp,xlim=c(0,30),ylim=c(0,100))
abline(l1)
m = l1$coefficients[2]
n= l1$coefficients[1]
summary(l1)$r.squared
diascalurosos= calidadAire2[calidadAire2$Temp>=90,]
diascalurosos
# datos
sal=c(1,2,3,4,5,6,7,8,8.5,9)
tiempo=c(22,23,24,25,26,27,27.5,27.8,28,29)
# dibujamos los datos
plot(sal,tiempo)
# objeto que representa la linea de mejor ajuste
l1=lm(tiempo~sal)
abline(l1) # añado el dibujo al plot.
# si la recta es y = ax + b
a = l1$coefficients[2] # la pendiente es el segundo coeficiente
b = l1$coefficients[1] # la ordenada en el origen el primer coeficiente
print(paste0("y=",a,"x + ",b))
text(2,28,paste0("y=",a,"x + ",b),pos=4) # pone el texto en la gráfica
# resumen de l1
summary(l1)
# Valor de r
R2=summary(l1)$r.squared
print(paste0("El valor de R2 es: ",R2))
# datos
cantidad=c(100,300,600,1000,3000)
precio=c(15,7,6.5,6,5)
# dibujamos los datos
plot(cantidad,precio)
# datos
cantidad=c(100,300,600,1000,3000)
precio=c(15,7,6.5,6,5)
# dibujamos los datos
plot(cantidad,precio)
# Nos damos cuenta de que sigue una curva del tipo precio = p0 * exp (k/cantidad)
# transformo en log(precio) = log(p0) + k/cantidad
# si hago x = 1/cantidad , y = log(precio) --> m = k y n=log(p0). calculo k y p0
# Transformo
x=1/cantidad
y=log(precio)
# objeto que representa la linea de mejor ajuste
# regresión lineal
plot(x,y)
l1=lm(y~x)
abline(l1) # añado el dibujo al plot.
# si la recta es y = mx + n
m = l1$coefficients[2] # la pendiente es el segundo coeficiente
n = l1$coefficients[1] # la ordenada en el origen el primer coeficiente
print(paste0("y=",m,"x + ",n))
text(2,28,paste0("y=",a,"x + ",b),pos=4) # pone el texto en la gráfica
# resumen de l1
summary(l1)
# Valor de r
R2=summary(l1)$r.squared
print(paste0("El valor de R2 es: ",R2))
# calculo parámetros
k = m
p0 = exp(n)
k
p0
# función para comprobar las preguntas
P = function(C) {p0 * exp(k/C)}
print(paste0("Precio cuando entren 500Kg de gambas ",P(500)))
print(paste0("Precio cuando entren 50K de gambas ",P(50)))
# datos
cantidad=c(100,300,600,1000,3000)
precio=c(15,7,6.5,6,5)
# dibujamos los datos
plot(cantidad,precio)
# Nos damos cuenta de que sigue una curva del tipo precio = p0 * exp (k/cantidad)
# transformo en log(precio) = log(p0) + k/cantidad
# si hago x = 1/cantidad , y = log(precio) --> m = k y n=log(p0). calculo k y p0
# Transformo
x=1/cantidad
y=log(precio)
# objeto que representa la linea de mejor ajuste
# regresión lineal
plot(x,y)
l1=lm(y~x)
abline(l1) # añado el dibujo al plot.
# si la recta es y = mx + n
m = l1$coefficients[2] # la pendiente es el segundo coeficiente
n = l1$coefficients[1] # la ordenada en el origen el primer coeficiente
print(paste0("y=",m,"x + ",n))
text(2,28,paste0("y=",a,"x + ",b),pos=4) # pone el texto en la gráfica
# resumen de l1
summary(l1)
# Valor de r
R2=summary(l1)$r.squared
print(paste0("El valor de R2 es: ",R2))
# calculo parámetros
k = m
p0 = exp(n)
print(paste0("Valor de k:  ",k))
print(paste0("Valor de p0:  ",k))
# función para comprobar las preguntas
P = function(C) {p0 * exp(k/C)}
print(paste0("Precio cuando entren 500Kg de gambas ",P(500)))
print(paste0("Precio cuando entren 50K de gambas ",P(50)))
# datos
cantidad=c(100,300,600,1000,3000)
precio=c(15,7,6.5,6,5)
# dibujamos los datos
plot(cantidad,precio)
# Nos damos cuenta de que sigue una curva del tipo precio = p0 * exp (k/cantidad)
# transformo en log(precio) = log(p0) + k/cantidad
# si hago x = 1/cantidad , y = log(precio) --> m = k y n=log(p0). calculo k y p0
# Transformo
x=1/cantidad
y=log(precio)
# objeto que representa la linea de mejor ajuste
# regresión lineal
plot(x,y)
l1=lm(y~x)
abline(l1) # añado el dibujo al plot.
# si la recta es y = mx + n
m = l1$coefficients[2] # la pendiente es el segundo coeficiente
n = l1$coefficients[1] # la ordenada en el origen el primer coeficiente
print(paste0("y=",m,"x + ",n))
text(2,28,paste0("y=",a,"x + ",b),pos=4) # pone el texto en la gráfica
# resumen de l1
summary(l1)
# Valor de r
R2=summary(l1)$r.squared
print(paste0("El valor de R2 es: ",R2))
# calculo parámetros
k = m
p0 = exp(n)
print(paste0("Valor de k:  ",k))
print(paste0("Valor de p0:  ",p0))
# función para comprobar las preguntas
P = function(C) {p0 * exp(k/C)}
print(paste0("Precio cuando entren 500Kg de gambas ",P(500)))
print(paste0("Precio cuando entren 50K de gambas ",P(50)))
# datos
cantidad=c(100,300,600,1000,3000)
precio=c(15,7,6.5,6,5)
# dibujamos los datos
plot(cantidad,precio)
# Nos damos cuenta de que sigue una curva del tipo precio = p0 * exp (k/cantidad)
# transformo en log(precio) = log(p0) + k/cantidad
# si hago x = 1/cantidad , y = log(precio) --> m = k y n=log(p0). calculo k y p0
# Transformo
x=1/cantidad
y=log(precio)
# objeto que representa la linea de mejor ajuste
# regresión lineal
plot(x,y)
l1=lm(y~x)
abline(l1) # añado el dibujo al plot.
# si la recta es y = mx + n
m = l1$coefficients[2] # la pendiente es el segundo coeficiente
n = l1$coefficients[1] # la ordenada en el origen el primer coeficiente
print(paste0("y=",m,"x + ",n))
text(2,28,paste0("y=",a,"x + ",b),pos=4) # pone el texto en la gráfica
# resumen de l1
summary(l1)
# Valor de r
R2=summary(l1)$r.squared
print(paste0("El valor de R2 es: ",R2))
# calculo parámetros
k = m
p0 = exp(n)
print(paste0("Valor de k:  ",k))
print(paste0("Valor de p0:  ",p0))
# función para comprobar las preguntas
P = function(C) {p0 * exp(k/C)}
print(paste0("Precio cuando entren 500Kg de gambas ",P(500)))
print(paste0("Precio cuando entren 50K de gambas ",P(50)))
print(paste0("Precio cuando entren 50K de gambas ",P(100)))
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coeeficients[2]
n = l1$coeeficients[1]
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",No))
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coeeficients[2]
n = l1$coeeficients[1]
m
n
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",No))
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coefficients[2]
n = l1$coefficients[1]
m
n
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",No))
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coefficients[2]
n = l1$coefficients[1]
m
n
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",N0))
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coefficients[2]
n = l1$coefficients[1]
m
n
# primera pregunta
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",N0))
#Segunda fiabilidad
print(paste0("Lafiabilidad es: ", summary(l1)$r.squared))
# tercero
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coefficients[2]
n = l1$coefficients[1]
m
n
# primera pregunta
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",N0))
#Segunda pregunta: fiabilidad
print(paste0("La fiabilidad es: ", summary(l1)$r.squared))
# Tercera
m = 5 #5 kg.
NoAv = 6.022e23 # partículas en un mol.
matCarbono = 12.0107 # gr/mol
molesC = m*1000/matCarbono
print(paste0("Moles de Carbono en la muestra original: ",molesC))
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coefficients[2]
n = l1$coefficients[1]
m
n
# primera pregunta
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",N0))
#Segunda pregunta: fiabilidad
print(paste0("La fiabilidad es: ", summary(l1)$r.squared))
# Tercera
m = 5 #5 kg.
NoAv = 6.022e23 # partículas en un mol.
matCarbono = 12.0107 # gr/mol
molesC = m*1000/matCarbono
print(paste0("Moles de Carbono en la muestra original: ",molesC))
NpartC = NoAv*molesC
print(paste0("Partículas de carbono en el árbol ",NpartC))
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coefficients[2]
n = l1$coefficients[1]
m
n
# primera pregunta
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",N0))
#Segunda pregunta: fiabilidad
print(paste0("La fiabilidad es: ", summary(l1)$r.squared))
# Tercera
m = 5 #5 kg.
NoAv = 6.022e23 # partículas en un mol.
matCarbono = 12.0107 # gr/mol
molesC = m*1000/matCarbono
print(paste0("Moles de Carbono en la muestra original: ",molesC))
NpartC = NoAv*molesC
print(paste0("Partículas de carbono en el árbol ",NpartC))
xcientoCarbono14 = 100*N0/NpartC
print(paste0("%partículas de carbono 14 ",xcientoCarbono14))
#datos
annos=c(100,	200,	300,	400,	500,	600,	700,	800,	900,	1000,	1100,	1200,	1300,	1400,	1500,	1600,	1700,	1800,	1900,	2000,	2100,	2200,	2300,	2400,	2500)
N=c(1.952,	1.885,	1.878,	1.784,	1.851,	1.899,	1.691,	1.826,	1.739,	1.611,	1.616,	1.707,	1.52,	1.532,	1.543,	1.556,	1.583,	1.37,	1.5,	1.486,	1.477,	1.413,	1.396,	1.377,	1.248)
#Reorganizamos los datos
N = N* 1e14 # hay que elevarlo a exp 14
# cĺculo de los parámetros: N = No exp (-t/tau)
# log(N) = log(N0) - t/tau
x = annos
y = log(N)
# recta de regresión
plot(x,y)
l1=lm(y~x)
abline(l1)
# parámetros
m = l1$coefficients[2]
n = l1$coefficients[1]
m
n
# primera pregunta
tau = -1/m
N0 = exp(n)
print(paste0("tau: ",tau," años"))
print(paste0("N0: ",N0))
#Segunda pregunta: fiabilidad
print(paste0("La fiabilidad es: ", summary(l1)$r.squared))
# Tercera
m = 5 #5 kg.
NoAv = 6.022e23 # partículas en un mol.
matCarbono = 12.0107 # gr/mol
molesC = m*1000/matCarbono
print(paste0("Moles de Carbono en la muestra original: ",molesC))
NpartC = NoAv*molesC
print(paste0("Partículas de carbono en el árbol: ",NpartC))
xcientoCarbono14 = 100*N0/NpartC
print(paste0("%partículas de carbono 14: ",xcientoCarbono14))
