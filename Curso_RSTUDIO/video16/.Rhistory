dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(altura~granos,data=trigo,col=c("red","blue"))
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
vectorBreak =seq(min(granos)-1,max(granos)+1,5)
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=seq(min(granos)-1,max(granos)+1,5),
levels=c("muy pocos",))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=seq(min(granos)-1,max(granos)+1,5),
levels=c("muy pocos","pocos","suficientes","bastantes","muchos"))
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=vectorBreak,
levels=c("muy pocos","pocos","suficientes","bastantes","muchos"))
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=vectorBreak, right=FALSE
labels=c("muy pocos","pocos","suficientes","bastantes","muchos"))
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=vectorBreak, right=FALSE,
labels=c("muy pocos","pocos","suficientes","bastantes","muchos"))
ngranos
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=vectorBreak, right=FALSE,
labels=c("muy pocos","pocos","suficientes","bastantes","muchos"))
trigo$cuantos = ngranos
View(trigo)
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=vectorBreak, right=FALSE,
labels=c("muy pocos","pocos","suficientes","bastantes","muchos"))
trigo$cuantos = ngranos # introduzco en el dataframe
# y represento por esos niveles
boxplot (altura~cuantos, data=trigo)
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=vectorBreak, right=FALSE,
labels=c("muy pocos","pocos","suficientes","bastantes","muchos"))
trigo$cuantos = ngranos # introduzco en el dataframe
# y represento por esos niveles
boxplot (altura~cuantos, data=trigo, col=terrain.colors(length(levels(ngranos))))
#Apartado 1
partidos=read.csv("futbolNew.csv",header=TRUE,dec=",")
dim(partidos)
#Apartado 1
partidos=read.csv("~/Escritorio/R/Curso_RSTUDIO/video10/futbolNew.csv",header=TRUE,dec=",")
dim(partidos)
#Apartado 1
partidos=read.csv("~/Escritorio/ R/Curso_RSTUDIO/video10/futbolNew.csv",header=TRUE,dec=",")
dim(partidos)
#Apartado 1
partidos=read.csv("~/Escritorio/ R/Curso_RSTUDIO/video10/futbolNEW.csv",header=TRUE,dec=",")
dim(partidos)
#Apartado 1
partidos=read.csv("~/Escritorio/ R/Curso_RSTUDIO/video10/futbolNEW.csv",header=TRUE,dec=",")
dim(partidos)
# Apartado 2
#Añadimos tres partidos a la lista:(10,0), (11,8),(10,9)
nuevafila=data.frame(Casa=c(10,11,10), Visitante=c(0,8,9))
partidos=rbind(partidos,nuevafila)
tail(partidos)
#Apartado 1
partidos=read.csv("~/Escritorio/ R/Curso_RSTUDIO/video10/futbolNEW.csv",header=TRUE,dec=",")
dim(partidos)
# Apartado 2
#Añadimos tres partidos a la lista:(10,0), (11,8),(10,9)
nuevafila=data.frame(Casa=c(10,11,10), Visitante=c(0,8,9))
partidos=rbind(partidos,nuevafila)
tail(partidos)
#Apartado 3
#añadimos el vector quinielas
partidos$quinielas=(partidos$Casa>partidos$Visitante)*1+
(partidos$Casa<partidos$Visitante)*2
partidos$quinielas=as.factor(partidos$quinielas)
levels(partidos$quinielas)=c("X","1","2")
View(partidos)
#Apartado 4
#tabla de frecuencias absolutas
Casa=partidos$Casa
Visitante=partidos$Visitante
Quinielas=partidos$quinielas
t1=ftable(Quinielas,Casa,Visitante,col.vars = "Quinielas")
t1
#tabla de frecuencias absolutas de los partidos empatados
#mediante Margin=c(1,2) obtenemos la matriz bidimensional
#a partir de la anterior
t2=table(Quinielas,Casa,Visitante)
t3 =apply(t2, MARGIN = c(1,2), FUN = sum)
t3
#Apartado 5
cat("\014")
#tabla de frecuencias absolutas de los partidos empatados
#mediante Margin=c(1,2) obtenemos la matriz bidimensional
#a partir de la anterior
t2=table(Quinielas,Casa,Visitante)
t3 =apply(t2, MARGIN = c(1,2), FUN = sum)
t3
# Partidos empatados
t3["X",]
#Eliminamos las columnas de valor 0, de la posicion 9 a la 12
t3["X",-9:-12]
#1
PARTIDOS=read.csv("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv",header=TRUE,dec=",")
#2
PARTIDOSFILANUEVA=data.frame(Casa=c(10,11,10),Visitante=c(0,8,9))
PARTIDOS= rbind(PARTIDOS,PARTIDOSFILANUEVA)
#3
PARTIDOS$QUINIELA = (PARTIDOS$Casa>PARTIDOS$Visitante) + 2*(PARTIDOS$Casa<PARTIDOS$Visitante)
PARTIDOS$QUINIELA = factor(PARTIDOS$QUINIELA,labels =c("X","1","2"))
#4
Average =(PARTIDOS$Casa>PARTIDOS$Visitante)*(PARTIDOS$Casa-PARTIDOS$Visitante)
Liga=data.frame(PARTIDOS$QUINIELA,Average)
#1
PARTIDOS=read.csv("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv",header=TRUE,dec=",")
#2
PARTIDOSFILANUEVA=data.frame(Casa=c(10,11,10),Visitante=c(0,8,9))
PARTIDOS= rbind(PARTIDOS,PARTIDOSFILANUEVA)
#3
PARTIDOS$QUINIELA = (PARTIDOS$Casa>PARTIDOS$Visitante) + 2*(PARTIDOS$Casa<PARTIDOS$Visitante)
PARTIDOS$QUINIELA = factor(PARTIDOS$QUINIELA,labels =c("X","1","2"))
#4
Average =(PARTIDOS$Casa>PARTIDOS$Visitante)*(PARTIDOS$Casa-PARTIDOS$Visitante)
Liga=data.frame(PARTIDOS$QUINIELA,Average)
#1
PARTIDOS=read.csv("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv",header=TRUE,dec=",")
PARTIDOS=read.csv("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv",header=TRUE,dec=",")
PARTIDOS=read.csv("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv",header=TRUE,dec=",")
PARTIDOS=read.csv("~/Escritorio/R/Curso_RSTUDIO/video10/futbolNEW.csv",header=TRUE,dec=",")
PARTIDOS=read.csv("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv",header=TRUE,sep=",")
#1
PARTIDOS=read.csv2("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv",header=TRUE,sep=",")
Partidos = read.csv("futbolNEW.csv", header = TRUE)
# funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# Obtenemos los datos
trigo = read.csv2("trigo_dos_variables.csv",header=TRUE,sep=",")
# (2) Medias, medianas
medias = sapply(trigo,mean)
medianas = sapply(trigo,median)
# (3) Varianzas y desviaciones típicas, muestrales y normales
varianzasM = sapply(trigo,var)
dTM = sapply(trigo,sd)
varianzasN = sapply(trigo,varN)
dTN = sapply(trigo,sdN) # cuando el número de casos es muy grande,
# las varianzas o desv típicas son parecidas
# (4) Matriz tipificada
# es restar la media y dividir entre la desviación típica normalizada
trigoTIP = scale(trigo,center=TRUE,scale=dTN)
trigoTIP = data.frame(trigoTIP)
# (5) Covarianza muestral y normal
n = dim(trigo)[1]
cov(trigo) # Muestral
cov(trigo)*(n-1)/n #Normalizada
# (6) Correlaciones
cor(trigo) # se puede decir que existe cierta relación entre la altura de las
# plantas y el número de granos.
# (7) Gráfica boxplot
boxplot(trigo,data=trigo,col=c("red","blue"))
boxplot(trigoTIP,data=trigoTIP,col=c("red","blue"))
# (8) Creo un factor con el número de granos, por ejemplo
vectorBreak =seq(min(trigo$granos)-1,max(trigo$granos)+1,5)
ngranos = cut (trigo$granos, breaks=vectorBreak, right=FALSE,
labels=c("muy pocos","pocos","suficientes","bastantes","muchos"))
trigo$cuantos = ngranos # introduzco en el dataframe
# y represento por esos niveles
boxplot (altura~cuantos, data=trigo, col=terrain.colors(length(levels(ngranos))))
View(trigo)
ruleta = read.csv2("ruleta.csv",header=TRUE,sep=",")
# valores de media, mediana, varianza muestrales y desviación típica muestrales
medias = sapply(ruleta,mean)
medianas = sapply(ruleta,median)
varianzas = sapply(ruleta,var)
desviaciones = sapply(ruleta,sd)
# valores de varianza y desviación típica normales
# primero funciones
varN = function(x) { var(x)*(length(x)-1)/length(x)}
sdN = function(x) {sqrt(varN(x))}
# segundo calculos
varianzasNormales = sapply(ruleta,varN)
desviacionesNormales = sapply(ruleta,sdN)
# Matriz tipificada
ruletaTipificada = scale(ruleta,center=TRUE,scale=desviacionesNormales)
ruletaTipificada = dataframe (ruletaTipificada)
ruletaTipificada
# Con faltas y suspensos
faltas = c(5,7,3,4,6,7,2,5,5,2,7)
suspensos = faltas-2
suspensos[2]=1
cov(faltas, suspensos)
cov(faltas, suspensos)*(length(faltas)-1)/length(faltas)
# correlacion
cor(faltas, suspensos)
cov(faltas,suspensos)/(sd(faltas)*sd(suspensos)) # es la misma
# volvemos a la ruleta. Calculamos la covarianza. Su diagonal son las varianzas.
n=dim(ruleta)[1]
cov(ruleta)*(n-1)/n
varianzasNormales
# Calculamos la correlación de la ruleta
round(cor(ruleta),2)
# que es lo mismo que la covarianza de la matriz tipificada
n=dim(ruletaTipificada)[1]
cov(ruletaTipificada)*(n-1)/n
ruleta
rios=rivers
rios
tail(rios)
rios[141]=500
tail(rios)
partidos = read.csv("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv", header = TRUE, dec=",")
partidos = read.csv2("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv", header = TRUE, dec=",")
partidos = read.csv2("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv", header = TRUE, sep=",")
partidos = read.csv2("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv", header = TRUE, sep=",")
partidos = read.csv2("~/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv", header = TRUE, sep=",")
partidos = read.csv2("/home/aurelio/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv", header = TRUE, sep=",")
partidos = read.csv2("/home/aurelio/Escritorio/R/Curso_RSTUDIO/video11/futbolNEW.csv", header = TRUE, sep=",")
partidos = read.csv2("/home/aurelio/Escritorio/ R /Curso_RSTUDIO/video11/futbolNEW.csv", header = TRUE, sep=",")
